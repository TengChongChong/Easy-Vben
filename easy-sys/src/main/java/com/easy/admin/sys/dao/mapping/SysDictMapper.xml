<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.admin.sys.dao.SysDictMapper">
    <resultMap id="BaseResultMap" type="com.easy.admin.sys.model.SysDict">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="parent_code" property="parentCode"/>
        <result column="dict_type" property="dictType"/>
        <result column="icon" property="icon"/>
        <result column="color" property="color"/>
        <result column="status" property="status"/>
        <result column="remarks" property="remarks"/>
        <result column="order_no" property="orderNo"/>
        <result column="version" property="version"/>
        <result column="create_date" property="createDate"/>
        <result column="create_user" property="createUser"/>
        <result column="edit_user" property="editUser"/>
        <result column="edit_date" property="editDate"/>
    </resultMap>
    <select id="selectByDictType" resultType="com.easy.admin.common.core.common.select.Select">
        select code as value, name as label from sys_dict
        where dict_type = #{dictType} and status = #{status} order by id
    </select>
    <select id="getMaxOrderNo" resultType="java.lang.Integer">
        select ifnull(max(order_no), 0) from sys_dict t where t.dict_type = #{dictType}
    </select>
    <select id="select" resultType="com.easy.admin.sys.model.vo.SysDictVO">
        select t.id, t.order_no, t.parent_code, t.name, t.code, t.icon, t.color, t.status, t.dict_type,
               ud.name as parent_name, su.nickname as editUser, t.edit_date
        from sys_dict t
          left join sys_user su on su.id = t.edit_user
          left join sys_dict ud on ud.id = t.parent_code and t.dict_type = ud.dict_type
        <where>
            ${ew.sqlSegment}
        </where>
    </select>
    <select id="selectAll" resultType="com.easy.admin.sys.model.SysDict">
        select t.code, t.parent_code, t.name, t.dict_type, t.icon, t.color from sys_dict t
        where t.status = #{status} order by dict_type, order_no
    </select>
    <select id="exportData" resultType="com.easy.admin.sys.model.SysDict">
        select t.id, t.name, t.code, t.parent_code, t.dict_type, t.icon, t.color, stauts_dict.name as status, t.remarks, t.order_no
        from sys_dict t
        left join sys_dict stauts_dict on stauts_dict.dict_type = 'commonStatus' and stauts_dict.code = t.status
        <where>
            ${ew.sqlSegment}
        </where>
        order by t.dict_type, t.order_no
    </select>
    <update id="updateDuplicateData">
        update sys_import_excel_temporary
        set verification_results = concat(ifnull(verification_results, ''), '字典类型下已存在（', field2, '）字典;'),
            verification_status  = #{status}
        where id in (
            select id from (
               select siet.id
               from sys_dict sd
               left join sys_import_excel_temporary siet on siet.field2 = sd.code and siet.field4 = sd.dict_type
               where siet.template_id = #{templateId} and siet.field2 is not null
           ) t
        );
    </update>
</mapper>