package ${basicsConfig.packagePath}.dao;

<% for(import in imports!){ %>
import ${import.name};
<% } %>
import ${basicsConfig.packagePath}.model.${basicsConfig.modelName};
import ${basicsConfig.packagePath}.model.vo.${basicsConfig.modelName}VO;

/**
 * ${basicsConfig.businessName}
 *
 * @author ${basicsConfig.author}
 * @date ${date}
 */
public interface ${basicsConfig.modelName}Mapper extends BaseMapper<${basicsConfig.modelName}> {
    <% if(basicsConfig.isGeneratorMethodsSelect){ %>
    <% if(basicsConfig.listGeneratorTemplate == 'tree-table' || basicsConfig.generatorTemplate == 'sub-table'){ %>

    /**
     * 查询数据（无分页）
     *
     * @param queryWrapper 查询条件
     * @return List<${basicsConfig.modelName}>
     */
    List<${basicsConfig.modelName}VO> selectWithoutPage(@Param("ew") QueryWrapper<${basicsConfig.modelName}> queryWrapper);
    <% } %>
    <% if(basicsConfig.listGeneratorTemplate == 'tree-table'){ %>

    /**
     * 查询所有数据（Tree）
     * @return List<JsTree>
     */
    List<Tree> selectAll();
    <% } %>
    <% if(basicsConfig.listGeneratorTemplate == 'table'){ %>

    /**
     * 查询数据
     *
     * @param page 分页
     * @param queryWrapper 查询条件
     * @return List<${basicsConfig.modelName}>
     */
    List<${basicsConfig.modelName}VO> select(Page<${basicsConfig.modelName}VO> page, @Param("ew") QueryWrapper<${basicsConfig.modelName}> queryWrapper);
    <% } %>

    /**
     * 查询详情
     *
     * @param id id
     * @return ${basicsConfig.modelName}
     */
    ${basicsConfig.modelName} getById(@Param("id") String id);
    <% } %>
    <% if(basicsConfig.isGeneratorMethodsSave){ %>
    <% if(basicsConfig.listGeneratorTemplate == 'tree-table'){ %>
    /**
     * 获取parentId下子级最大排序值
     *
     * @param parentId parentId
     * @return int
     */
    int getMaxOrderNo(@Param("parentId") String parentId);
    /**
     * 保存排序&结构
     *
     * @param list 数据
     * @return 更新条数
     */
    Integer updateOrderBatch(List<${basicsConfig.modelName}> list);
    <% } %>
    <% } %>

    <% if(basicsConfig.isGeneratorMethodsExport){ %>
    /**
     * 查询导出数据
     *
     * @param queryWrapper 查询条件
     * @return List<${basicsConfig.modelName}>
     */
    List<${basicsConfig.modelName}VO> exportData(@Param("ew") QueryWrapper<${basicsConfig.modelName}> queryWrapper);
    <% } %>
}