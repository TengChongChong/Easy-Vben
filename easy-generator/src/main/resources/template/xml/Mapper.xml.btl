<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${basicsConfig.packagePath}.dao.${tableInfo.mapperName}">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="${basicsConfig.packagePath}.model.vo.${basicsConfig.modelName}VO">
        <% for(field in tableInfo.fields){ %>
        <% if(field.keyIdentityFlag) { %>
        <id column="${strutil.toLowerCase(field.name)}" property="${field.propertyName}" />
        <% } else { %>
        <result column="${strutil.toLowerCase(field.name)}" property="${field.propertyName}" />
        <% } %>
        <% } %>
    </resultMap>

    <% if(basicsConfig.isGeneratorMethodsSelect){ %>
    <% if(basicsConfig.listGeneratorTemplate == 'tree-table' || basicsConfig.generatorTemplate == 'sub-table'){ %>
    <select id="selectWithoutPage" resultType="${basicsConfig.packagePath}.model.vo.${basicsConfig.modelName}VO">
        select t.id, t.parent_id<% for(item in tableConfig){ %>, ${GeneratorXmlUtil.getSelectField(item)}<% } %>
        from ${strutil.toLowerCase(tableInfo.name)} t
        <% for(item in tableConfig){ %>
        <% if(strutil.toLowerCase(item.name) == 'create_user' || strutil.toLowerCase(item.name) == 'edit_user'){ %>
        left join sys_user su_${strutil.toLowerCase(item.name)} on su_${strutil.toLowerCase(item.name)}.id = t.${strutil.toLowerCase(item.name)}
        <% } %>
        <% } %>
        <where>
            \${ew.sqlSegment}
        </where>
    </select>
    <% } %>
    <% if(basicsConfig.listGeneratorTemplate == 'tree-table'){ %>

    <select id="selectAll" resultType="com.easy.admin.common.core.common.tree.Tree">
        select t.id, t.parent_id, t.name as title, t.id as `key`
        from ${strutil.toLowerCase(tableInfo.name)} t
        order by t.order_no
    </select>
    <% } %>
    <% if(basicsConfig.listGeneratorTemplate == 'table'){ %>
    <select id="select" resultType="${basicsConfig.packagePath}.model.vo.${basicsConfig.modelName}VO">
        select t.id<% for(item in tableConfig){ %>, ${GeneratorXmlUtil.getSelectField(item)}<% } %>
        from ${strutil.toLowerCase(tableInfo.name)} t
        <% for(item in tableConfig){ %>
        <% if(strutil.toLowerCase(item.name) == 'create_user' || strutil.toLowerCase(item.name) == 'edit_user'){ %>
        left join sys_user su_${strutil.toLowerCase(item.name)} on su_${strutil.toLowerCase(item.name)}.id = t.${strutil.toLowerCase(item.name)}
        <% } %>
        <% } %>
        <where>
            \${ew.sqlSegment}
        </where>
    </select>
    <% } %>

    <%index = 0;%>
    <select id="getById" resultType="${basicsConfig.packagePath}.model.${basicsConfig.modelName}">
        select <% for(item in tableInfo.fields){ %>${index == 0 ? '' : ', '}t.${strutil.toLowerCase(item.name)}<% index++;} %>
        from ${strutil.toLowerCase(tableInfo.name)} t
        where t.id = #{id}
    </select>
    <% } %>
    <% if(basicsConfig.isGeneratorMethodsSave){ %>
    <% if(basicsConfig.listGeneratorTemplate == 'tree-table'){ %>

    <select id="getMaxOrderNo" resultType="java.lang.Integer">
        select ifnull(max(order_no), 0)
        from ${strutil.toLowerCase(tableInfo.name)} t
        where t.parent_id = #{parentId}
    </select>
    <update id="updateOrderBatch">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ${strutil.toLowerCase(tableInfo.name)}
            <set>
                parent_id = #{item.parentId},
                order_no = #{item.orderNo}
            </set>
            where id = #{item.id}
        </foreach>
    </update>
    <% } %>
    <% } %>
    <% if(basicsConfig.isGeneratorMethodsExport){ %>

    <%index = 0;%>
    <select id="exportData" resultType="${basicsConfig.packagePath}.model.vo.${basicsConfig.modelName}VO">
        select <% for(item in exportConfig!){ %>${index == 0 ? '' : ', '}${GeneratorXmlUtil.getExportField(item)}<% index++;} %>
        from ${strutil.toLowerCase(tableInfo.name)} t
        <% for(item in exportConfig!){ %>
        <% if(strUtil.isNotBlank(item.dictType)){ %>
        left join sys_dict sd_${strutil.toLowerCase(item.name)} on sd_${strutil.toLowerCase(item.name)}.code = t.${strutil.toLowerCase(item.name)} and sd_${strutil.toLowerCase(item.name)}.dict_type = '${item.dictType}'
        <% } else if(strutil.toLowerCase(item.name) == 'create_user' || strutil.toLowerCase(item.name) == 'edit_user'){ %>
        left join sys_user su_${strutil.toLowerCase(item.name)} on su_${strutil.toLowerCase(item.name)}.id = t.${strutil.toLowerCase(item.name)}
        <% } %>
        <% } %>
        <where>
            \${ew.sqlSegment}
        </where>
    </select>
    <% } %>
</mapper>
